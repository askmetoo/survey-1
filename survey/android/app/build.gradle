def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.sensoro.survey"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a"
        }
        manifestPlaceholders = [
                AMAP_KEY: "223082ee8e171c2e60fe707d8bb48806", /// 高德地图key
        ]
    }
    signingConfigs {
        release {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('sensoro.keystore')
            storePassword 'sensoro'
        }
        debug {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('sensoro.keystore')
            storePassword 'sensoro'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            ndk {
                abiFilters "armeabi-v7a"
            }
        }


        debug {
            ndk {
                abiFilters "armeabi-v7a"
            }
        }

    }
}
//compileOptions {
//    sourceCompatibility JavaVersion.VERSION_1_8
//    targetCompatibility JavaVersion.VERSION_1_8
//}
//sourceSets {
//    main {
//        jniLibs.srcDir 'libs'
//    }
//
//}
flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //3D地图so及jar
    api 'com.amap.api:3dmap:latest.integration'
    //定位功能
    api 'com.amap.api:location:latest.integration'
    //搜索功能
    api 'com.amap.api:search:latest.integration'
//    implementation 'com.android.support:appcompat-v7:28.0.0'
}
